"""Initial migration

Revision ID: 7baecdaa3b22
Revises: 
Create Date: 2025-08-14 09:53:04.643149

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7baecdaa3b22'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('$ndo$dbproperty')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('$ndo$dbproperty',
    sa.Column('programid', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('chartable', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('maxrecsize', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('maxloginattempts', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('passwordexpindays', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('supergroupid', sa.VARCHAR(length=128), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('unifiedloginallowed', sa.SMALLINT(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('contype', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('shadowpwd', sa.VARCHAR(length=128), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('databasemagic', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('databaseversionno', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('clientdatabaseversionno', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('maintainviews', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('diagnostics', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('identifiers', sa.VARCHAR(length=2000), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('maintainrelationships', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('convertidentifiers', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('invalididentifierchars', sa.VARCHAR(length=128), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('license', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('checkcodepage', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('quickfind', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('maintaindefaults', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('locktimeout', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('locktimeoutperiod', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('hardrowlock', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('bufferedrows', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('securityoption', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('enabledforserver', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('uidoffset', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('applicationversion', sa.VARCHAR(length=50), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.Column('applicationfamily', sa.VARCHAR(length=50), server_default=sa.text("''::character varying"), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('programid', name=op.f('PK$ndo$dbproperty'))
    )
    # ### end Alembic commands ###
